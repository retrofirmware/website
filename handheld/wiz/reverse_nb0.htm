<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>GP2X Wiz</h3>
<p><b>解析Pollux UART.nb0</b></p>
<hr size="1">
<p>
Pollux本身內建UART Bootloader程式，該程式可以避免使用SDCard更新失敗而造成無法開機的狀況，相當便利的設計，因為這代表Wiz掌機是燒不死的，讓司徒可以更加安心的開發軟體程式，而當Pollux處於UART Bootloader模式時，它會等待使用者傳送512B或16KB的資料，Wiz掌機預設設定為等待16KB資料，所以當Pollux處於UART Bootloader模式時，Pollux會使用Baudrate 19200 bps等待使用者傳送16KB的資料到記憶體，一旦UART接收的資料達到16KB後，Pollux會直接跳到0x0000位址開始執行。<br><br>

既然已經知道Pollux的基本運作原理，司徒就帶大家先來分析一下UART.nb0檔案
</p>

<pre>
00000000  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
*
00001000  fe 03 00 ea 00 00 00 00  00 00 00 00 00 00 00 00  |................|
00001010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
*
00001040  45 43 45 43 24 3f 00 00  24 2f 00 00 00 00 00 00  |ECEC$?..$/......|
00001050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|
...
</pre><br>

<p>
當司徒一看到0x1040位址的ECEC標誌，第一個想到的就是WinCE XIP(Execution In Place) NB0檔案格式，這種檔案格式具有直接執行的優點，因此可以直接燒錄於NOR Flash Memory並執行，但是缺點就是容量會比一般壓縮過的BIN檔案還要大，而NB0的格式具有如下段落
</p>

<table>
<tr><th>檔案格式</th><th>UART.nb0對應位址</th></tr>
  <tr><th style="background-color: rgb(152,203,0); color:#000000;" align="right">EA Comment(64 Bytes NULL)</th><td>0x1000</td></tr>
  <tr><th style="background-color: rgb(255,204,1); color:#000000;" align="right">ECEC Signature</th><td>0x1040</td></tr>
  <tr><th style="background-color: rgb(254,0,9); color:#ffffff;" align="right">ROM Header Address</th><td>0x1044</td></tr>
  <tr><th style="background-color: rgb(254,0,9); color:#ffffff;" align="right">ROM Header Extension</th><td></td></tr>
  <tr><th style="background-color: rgb(254,0,9); color:#ffffff;" align="right">Chain Information</th><td></td></tr>
  <tr><th style="background-color: rgb(254,0,9); color:#ffffff;" align="right">ROM Header Structure</th><td>0x3F24</td></tr>
  <tr><th style="background-color: rgb(153,205,253); color:#000000;" align="right">Modules and Files Index Data</th><td>0x3F78</td></tr>
</table><br>

<pre>
=== ROM Header Structure ===
First DLL address:                              0x02000000
Last DLL address:                               0x02000000
First physical address:                         0x00001000
Highest physical address:                       0x00004098
Number of TOC entries:                          0x00000001
Start of RAM:                                   0x000F0000
Start of RAM free space:                        0x000F0000
End of RAM:                                     0x00100000
Number of copy section entries:                 0x00000001
Offset to the copy section:                     0x00003F98
Length of profile entries in RAM:               0x00000000
Offset to the profile entries:                  0x00000000
Number of files:                                0x00000000
Kernel flags:                                   0x00000000
Percentage of RAM used for the file system:     0x80808080
Device driver global starting address:          0x00000000
Device driver global length:                    0x00000000
CPU type:                                       0x01C2(Thumb)
Miscellaneous flags:                            0x0002
Pointer to ROM header extensions:               0x00000000
Tracking memory starting address:               0x00000000
Tracking memory ending address:                 0x00000000

=== TOC Entry ===
File attributes:                                0x00000001
The high 32 bits of the time value:             0x01C86EC5
The low 32 bits of the time value:              0x97AC9CC6
File size:                                      0x00002800
lpszFileName:                                   nk.exe
Offset to E32 structure:                        0x00003E64
Offset to O32 structure:                        0x00003ED4
Module load buffer offset:                      0x00001000
</pre>

<p>
分析到這裡時，司徒發覺兩個地方怪怪的，第一個問題是開頭怎麼都是0x00的資料？第二個問題則是nk.exe檔案問題？針對第一個問題，司徒使用IDA Pro反組譯後，發現反組譯後的組合語言是<b>ANDEQ R0, R0, R0</b>，這個指令其實類似於NOP指令的作用(不做任何事情)，直到0x1000位址才開始真正執行程式，只是為何要填入4096個0x00就有點怪，至於第二個問題，UART.nb0竟然包含一個nk.exe檔案，但是，司徒想了再想後，發覺可能是為了WinCE相容問題，因此才會做這樣的設計，因為就算包含ROM Header、TOC Entry資料結構，但是，Pollux一開始會從0x0000位址開始執行，所以Pollux可以不用在意後面的相關資料(因為程式不會執行到這裡)。所以結論就是UART.nb0包含兩種相容模式，第一種就是單純的Bootloader程式，第二種就是WinCE相容的XIP檔案格式，若使用在Wiz掌機身上，由於目前還沒有WinCE系統移植，因此UART.nb0算是一種單純的Bootloader程式，而真正的程式是從0x1000才開始執行。
</p>

<p>
<br><a href="../../handheld.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
