<!--
 ____________________________________________________________
|                                                            |
|    DESIGN + Pat Heard { http://fullahead.org }             |
|      DATE + 2006.09.12                                     |
| COPYRIGHT + Free use if this notice is kept in place.      |
|____________________________________________________________|

-->

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>司徒的教學網站</title>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta http-lowast="content-type" content="application/xhtml+xml; charset=UTF-8" />
  <meta name="author" content="fullahead.org" />
  <meta name="keywords" content="XHTML, CSS, template, FullAhead" />
  <meta name="description" content="A valid, XHTML 1.0 template" />
  <meta name="robots" content="index, follow, noarchive" />
  <meta name="googlebot" content="noarchive" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.1, maximum-scale=100.0"/>

  <link rel="shortcut icon" href="../../website.ico">
  <link rel="stylesheet" type="text/css" href="../../styles/shCore.css" />
  <link rel="stylesheet" type="text/css" href="../../styles/shThemeDefault.css" />
  <link rel="stylesheet" type="text/css" href="../../css/html.css" media="screen, projection, tv " />
  <link rel="stylesheet" type="text/css" href="../../css/layout.css" media="screen, projection, tv" />
  <link rel="stylesheet" type="text/css" href="../../css/print.css" media="print" />
  
  <script type="text/javascript" src="../../scripts/shCore.js"></script>
  <script type="text/javascript" src="../../scripts/shBrushCpp.js"></script>

  <!-- Conditional comment to apply opacity fix for IE #content background.
       Invalid CSS, but can be removed without harming design -->
  <!--[if gt IE 5]>
  <link rel="stylesheet" type="text/css" href="css/ie.css" media="screen, projection, tv " />
  <![endif]-->
</head>

<body>
<script type="text/javascript">SyntaxHighlighter.all();</script>
<div id="wrapper">
<div id="content">
<script type="text/javascript" src="../../header.js"></script>
<div id="page">
<h3>Game Boy &gt;&gt; 硬體資訊</h3>
<p><b>CPU</b></p>
<hr size="1">
<p>
Ref. <a href="http://marc.rawer.de/Gameboy/Docs/GBCPUman.pdf">http://marc.rawer.de/Gameboy/Docs/GBCPUman.pdf</a><br>
Ref. <a href="https://ia801906.us.archive.org/19/items/GameBoyProgManVer1.1/GameBoyProgManVer1.1.pdf">https://ia801906.us.archive.org/19/items/GameBoyProgManVer1.1/GameBoyProgManVer1.1.pdf</a><br><br>

Registers
</p>
<table>
<tr><th>8 Bits</th><th>8 Bits</th></tr>
<tr><td>A</td><td>F</td></tr>
<tr><td>B</td><td>C</td></tr>
<tr><td>D</td><td>E</td></tr>
<tr><td>H</td><td>L</td></tr>
<tr><td colspan="2">PC</td></tr>
<tr><td colspan="2">SP</td></tr>
</table>
<p>
AF、BC、DE、HL可以組成16Bit Register<br><br>

Flag Register
</p>
<table>
<tr><th>Bit 7</th><th>6</th><th>5</th><th>4</th><th>3</th><th>2</th><th>1</th><th>0</th></tr>
<tr><td>Zero(Z)</td><td>Subtract(N)</td><td>Half Carry(H)</td><td>Carry(C)</td><td></td><td></td><td></td><td></td></tr>
</table><br>

<p>
8-Bits Load
</p>
<table>
<tr><th>Instruction</th><th>Description</th></tr>
<tr><td>LD p1, #</td><td>p1 = #<br>(p1 = B, C, D, E, H, L, BC, DE, HL, SP)<br>(# = 8 bits value)</td></tr>
<tr><td>LD p1, p2</td><td>p1 = p2<br>(p1, p2 = A, B, C, D, E, H, L, HL)</tr>
<tr><td>LD A, p2</td><td>A = p2<br>(p2 = A, B, C, D, E, H, L, (BC), (DE), (HL), (##), #)</tr>
<tr><td>LD p1, A</td><td>p1 = A<br>(p1 = A, B, C, D, E, H, L, (BC), (DE), (HL), (##))</tr>
<tr><td>LD A, (C)</td><td>A = ($FF00 + C)</tr>
<tr><td>LD (C), A</td><td>($FF00 + C) = A</tr>
<tr><td>LD A, (HLD)</td><td>A = (HL), HL = HL - 1</tr>
<tr><td>LD A, (HL-)</td><td>A = (HL), HL = HL - 1</tr>
<tr><td>LDD A, (HL)</td><td>A = (HL), HL = HL - 1</tr>
<tr><td>LD (HLD), A</td><td>(HL) = A, HL = HL - 1</tr>
<tr><td>LD (HL-), A</td><td>(HL) = A, HL = HL - 1</tr>
<tr><td>LDD (HL), A</td><td>(HL) = A, HL = HL - 1</tr>
<tr><td>LD A, (HLI)</td><td>A = (HL), HL = HL + 1</tr>
<tr><td>LD A, (HL+)</td><td>A = (HL), HL = HL + 1</tr>
<tr><td>LDI A, (HL)</td><td>A = (HL), HL = HL + 1</tr>
<tr><td>LD (HLI), A</td><td>(HL) = A, HL = HL + 1</tr>
<tr><td>LD (HL+), A</td><td>(HL) = A, HL = HL + 1</tr>
<tr><td>LDI (HL), A</td><td>(HL) = A, HL = HL + 1</tr>
<tr><td>LDH (#), A</td><td>($FF00 + #) = A</tr>
<tr><td>LDH A, (#)</td><td>A = ($FF00 + #)</tr>
</table><br>

<p>
16-Bits Load
</p>
<table>
<tr><th>Instruction</th><th>Description</th></tr>
<tr><td>LD p1, ##</td><td>p1 = ##<br>(p1 = BC, DE, HL, SP)<br>(## = 16 bits value)</td></tr>
<tr><td>LD SP, HL</td><td>SP = HL</td></tr>
<tr><td>LD HL, SP+#</td><td>HL = SP + #</td></tr>
<tr><td>LDHL SP+#</td><td>HL = SP + #</td></tr>
<tr><td>LD (##), SP</td><td>(##) = SP</td></tr>
<tr><td>PUSH p1</td><td>p1 = AF, BC, DE, HL</td></tr>
<tr><td>POP p1</td><td>p1 = AF, BC, DE, HL</td></tr>
</table><br>

<p>
8-Bits ALU
</p>
<table>
<tr><th>Instruction</th><th>Description</th></tr>
<tr><td>ADD A, p2</td><td>A = A + p2<br>(p2 = A, B, C, D, E, H, L, (HL), #)</td></tr>
<tr><td>ADC A, p2</td><td>A = A + p2 + CY<br>(p2 = A, B, C, D, E, H, L, (HL), #)<br>(CY = Carry flag)</td></tr>
<tr><td>SUB p1</td><td>A = A - p1<br>(p1 = A, B, C, D, E, H, L, (HL), #)</td></tr>
<tr><td>SBC A, p2</td><td>A = A - p2 - CY<br>(p2 = A, B, C, D, E, H, L, (HL), #)<br>(CY = Carry flag)</td></tr>
<tr><td>AND p1</td><td>A = A &amp; p1<br>(p1 = A, B, C, D, E, H, L, (HL), #)</td></tr>
<tr><td>OR p1</td><td>A = A | p1<br>(p1 = A, B, C, D, E, H, L, (HL), #)</td></tr>
<tr><td>XOR p1</td><td>A = A ^ p1<br>(p1 = A, B, C, D, E, H, L, (HL), #)</td></tr>
<tr><td>CP p1</td><td>Compare A and p1<br>(p1 = A, B, C, D, E, H, L, (HL), #)</td></tr>
<tr><td>INC p1</td><td>p1 = p1 + 1<br>(p1 = A, B, C, D, E, H, L, (HL))</td></tr>
<tr><td>DEC p1</td><td>p1 = p1 - 1<br>(p1 = A, B, C, D, E, H, L, (HL))</td></tr>
</table><br>

<p>
16-Bits ALU
</p>
<table>
<tr><th>Instruction</th><th>Description</th></tr>
<tr><td>ADD HL, p2</td><td>HL = HL + p2<br>(p2 = BC, DE, HL, SP)</td></tr>
<tr><td>ADD SP, #</td><td>SP = SP + #<br>(# = 8 bits value)</td></tr>
<tr><td>INC p1</td><td>p1 = p1 + 1<br>(p1 = BC, DE, HL, SP)</td></tr>
<tr><td>DEC p1</td><td>p1 = p1 - 1<br>(p1 = BC, DE, HL, SP)</td></tr>
</table><br>

<p>
<br><a href="../../handheld.htm">返回上一頁</a>
</p>

</div>
</div>
</div>
</body>
</html>
